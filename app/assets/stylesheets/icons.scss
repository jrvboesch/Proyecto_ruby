$tcon-size: 40px !default;
$tcon-transition: .3s !default;
$tcon-jstransform: 'tcon-transform' !default;

$tcon-menu-radius: ($tcon-size / 14) !default;
$tcon-menu-color: black !default;
$tcon-menu-arrowleft-transformation: (
  transform: scale3d(.8, .8, .8) rotate3d(0, 0, 1, 90deg)
) !default;
$tcon-menu-arrow360left-transformation: (
  transform: scale3d(.8, .8, .8) rotate3d(0, 0, 1, 360deg)
) !default;
.tcon {
  appearance: none;
  border: none;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  height: $tcon-size;
  transition: $tcon-transition;
  user-select: none;
  width: $tcon-size;
  background: transparent;
  outline: none;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  -webkit-tap-highlight-color: transparent;

  > * {
    display: block;
  }

  &:hover,
  &:focus {
    outline: none; // see issue #36 https://github.com/grayghostvisuals/transformicons/issues/36
  }
  &::-moz-focus-inner {
    border: 0;
  }
}

@mixin tcon-menu-lines {
  display: inline-block;
  height: ($tcon-size / 7);
  width: $tcon-size;
  border-radius: $tcon-menu-radius;
  transition: $tcon-transition;
  background: $tcon-menu-color;
}

.tcon-menu__lines {
  @include tcon-menu-lines;
  position: relative;

  &::before,
  &::after {
    @include tcon-menu-lines;
    content: '';
    position: absolute;
    left: 0;
    transform-origin: ($tcon-size / 14) center;
    width: 100%;
  }

  &::before {
    top: ($tcon-size / 4);
  }

  &::after {
    top: -($tcon-size / 4);
  }

  .#{$tcon-jstransform} & {
    transform: scale3d(.8, .8, .8);
  }
}
.tcon-menu--xbutterfly {
  width: auto;

  .tcon-menu__lines {
    &::before,
    &::after {
      transform-origin: 50% 50%;
      transition: top .3s .6s ease, transform .3s ease;
    }
  }

  &.#{$tcon-jstransform} {
    .tcon-menu__lines {
      background: transparent;

      &::before,
      &::after {
        top: 0;
        transition: top .3s ease, transform .3s .5s ease;
        width: $tcon-size;
      }

      &::before {
        transform: rotate3d(0, 0, 1, 45deg);
      }

      &::after {
        transform: rotate3d(0, 0, 1, -45deg);
      }
    }
  }
}

// see issue #7 https://github.com/grayghostvisuals/transformicons/issues/7#issuecomment-59813596
.tcon-visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  &:active,
  &:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}
.tcon-menu--minus {
  width: auto;

  &.#{$tcon-jstransform} {
    .tcon-menu__lines {
      &::before,
      &::after {
        transform: none;
        top:0;
        width: $tcon-size;
      }
    }
  }
}

.tcon-menu--xcross {
  width: auto;

  &.#{$tcon-jstransform} {
    .tcon-menu__lines {
      background: transparent;

      &::before,
      &::after {
        transform-origin: 50% 50%;
        top: 0;
        width: $tcon-size;
      }

      &::before {
        transform: rotate3d(0, 0, 1, 45deg);
      }

      &::after {
        transform: rotate3d(0, 0, 1, -45deg);
      }
    }
  }
}
.tcon-menu--arrow {
  width: auto;

  &.#{$tcon-jstransform} {
    .tcon-menu__lines {
      &::before,
      &::after {
        top: 0;
        width: ($tcon-size / 1.8);
      }

      &::before {
        transform: rotate3d(0, 0, 1, 45deg);
      }

      &::after {
        transform: rotate3d(0, 0, 1, -45deg);
      }
    }
  }
}
.tcon-menu--arrowup {
  width: auto;
  &.#{$tcon-jstransform} {
    @each $property, $value in $tcon-menu-arrowleft-transformation {
      #{$property} : #{$value};
    }
  }
}
.tcon-menu--arrow360left {
  &.#{$tcon-jstransform} {
    @each $property, $value in $tcon-menu-arrow360left-transformation {
      #{$property} : #{$value};
    }
  }
}
.tcon-menu--arrowleft {
  @extend .tcon-menu--arrow;
}
$tcon-grid-color: black !default;
$tcon-grid-transition: .3s !default;
$tcon-grid-base: .5rem !default;
$tcon-grid-space: ($tcon-grid-base / 4) !default;
$tcon-grid-morph: (
  transform: rotate3d(0, 0, 1, -45deg) scale3d(.8, .8, .8)
);
.tcon-grid {
  padding: $tcon-grid-base*2;
  .tcon-grid__item {
    width: $tcon-grid-base;
    height: $tcon-grid-base;
    background: $tcon-grid-color;
    color: $tcon-grid-color;
    transition: $tcon-transition;
  }
}

.tcon-grid.#{$tcon-jstransform} {
  .tcon-grid__item {
    transform: map-values($tcon-grid-morph);
  }
}
.tcon-grid--collapse {
  .tcon-grid__item {
    box-shadow:
      -($tcon-grid-base+$tcon-grid-space) 0,
      -($tcon-grid-base+$tcon-grid-space) ($tcon-grid-base+$tcon-grid-space),
      $tcon-grid-base+$tcon-grid-space 0,
      ($tcon-grid-base+$tcon-grid-space) (-($tcon-grid-base+$tcon-grid-space)),
      0 0 -($tcon-grid-base+$tcon-grid-space),
      -($tcon-grid-base+$tcon-grid-space) 0 -($tcon-grid-base+$tcon-grid-space),
      0 ($tcon-grid-base+$tcon-grid-space),
      ($tcon-grid-base+$tcon-grid-space) ($tcon-grid-base+$tcon-grid-space);
  }

  &.#{$tcon-jstransform} {
    .tcon-grid__item {
      box-shadow:
        -$tcon-grid-base 0,
        0 0 transparent,
        $tcon-grid-base 0,
        0 0 transparent,
        0 0 -$tcon-grid-base,
        0 0 transparent,
        0 $tcon-grid-base,
        0 0 transparent;
    }
  }
}
.tcon-grid--rearrange {
  .tcon-grid__item {
    box-shadow:
      -($tcon-grid-base+$tcon-grid-space) 0 -($tcon-grid-base+$tcon-grid-space),
      0 0 -($tcon-grid-base+$tcon-grid-space),
      ($tcon-grid-base+$tcon-grid-space) (-($tcon-grid-base + $tcon-grid-space)),
      -($tcon-grid-base+$tcon-grid-space) 0,
      $tcon-grid-base+$tcon-grid-space 0,
      -($tcon-grid-base+$tcon-grid-space) ($tcon-grid-base + $tcon-grid-space),
      0 ($tcon-grid-base+$tcon-grid-space),
      ($tcon-grid-base+$tcon-grid-space) ($tcon-grid-base + $tcon-grid-space);
  }
}

.tcon-grid--rearrange.#{$tcon-jstransform}  { 
  .tcon-grid__item {
      box-shadow:
        0 0 -$tcon-grid-base,
        0 0 -$tcon-grid-base * 2,
             $tcon-grid-base 0,
            -$tcon-grid-base * 2 0,
             $tcon-grid-base * 2 0,
            -$tcon-grid-base 0,
           0 $tcon-grid-base * 2,
           0 $tcon-grid-base;
  }
}
$tcon-plus-bg: transparent !default;
$tcon-circle-radius: 80% !default;
$tcon-plus-radius: ($tcon-size / 8) !default;
$tcon-plus-color: black !default;
$tcon-remove-color: black !default;

.tcon-plus {
  height: $tcon-size;
  position: relative;
  transform: scale(.75);
  width: $tcon-size;

  &::before,
  &::after {
    content: "";
    border-radius: 2px;
    display: block;
    width: 85%;
    height: 25%;
    position: absolute;
    top: 37%;
    left: 8%;
    transition: $tcon-transition;
    background: black;
  }

  &:after {
    transform: rotate(90deg);
  }
}

.tcon-plus--check {
  &.#{$tcon-jstransform} {
    &::before {
      transform: rotate(-135deg) translate(5%, -10%);
      top: 50%;
      width: 55%;
    }

    &::after {
      transform: rotate(-45deg) translate(20%, 10%); 
      top: 50%;
      width: 85%;
    }
  }
}

.tcon-plus--minus {
  &.#{$tcon-jstransform} {
    &::before {
      transform: rotate(180deg) translate(0, 0);
      width: 62%;
    }

    &::after {
      transform: rotate(-180deg) translate(-37.5%, 0); 
      width: 62%;
    }
  }
}

.tcon-remove {
  height: $tcon-size;
  position: relative;
  transform: scale(.75);
  width: $tcon-size;

  &::before,
  &::after {
    content: "";
    display: block;
    height: 25%;
    width: 85%;
    position: absolute;
    top: 37%;
    left: 8%;
    transition: $tcon-transition;
    background: $tcon-remove-color;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

.tcon-remove--check {
  &.#{$tcon-jstransform} {
    &::before {
      transform: rotate(-135deg) translate(5%, -10%);
      top: 50%;
      width: 55%;
    }

    &::after {
      transform: rotate(-45deg) translate(20%, 10%);
      top: 50%;
      width: 85%;
    }
  }
}

.tcon-remove--chevron-left {
  &.#{$tcon-jstransform} {
    &::before {
      left: 20%;
      transform: translate(0, -55%) rotate(-45deg) ;
      width: 62%;
    }

    &::after {
      left: 20%;
      transform: translate(0, 55%) rotate(45deg);
      width: 62%;
    }
  }
}

.tcon-remove--chevron-right {
  &.#{$tcon-jstransform} {
    &::before {
      left: 20%;
      transform: translate(0, 55%) rotate(-45deg) ;
      width: 62%;
    }

    &::after {
      left: 20%;
      transform: translate(0, -55%) rotate(45deg);
      width: 62%;
    }
  }
}

.tcon-remove--chevron-down {
  &.#{$tcon-jstransform} {
    &::before {
      left: 5%;
      transform: rotate(-135deg);
      width: 59%;
    }

    &::after {
      left: auto;
      right: 10%;
      transform: rotate(135deg);
      width: 60%;
    }
  }
}

.tcon-remove--chevron-up {
  &.#{$tcon-jstransform} {
    &::before {
      left: 5%;
      transform: rotate(-45deg);
      width: 59%;
    }

    &::after {
      left: auto;
      right: 10%;
      transform: rotate(45deg);
      width: 60%;
    }
  }
}

$tcon-envelope-size: 40px !default;
$tcon-envelope-morph: (
  transform: .2s transform ease-in-out
) !default;
$tcon-envelope-transition: map-values($tcon-envelope-morph) !default;
.tcon-mail--envelope {
  width: $tcon-envelope-size;
  height: $tcon-envelope-size/2;
  background: #3D3F41;
  position: relative;

  &:before,
  &:after {
    content: "";
    display: block;
    position: absolute;
    bottom: 0;
    top: 0;
    width: $tcon-envelope-size;
  }

  &:before {
    left: 0;
    border-left: $tcon-envelope-size solid #BCBCBD;
    border-top: $tcon-envelope-size/2 solid transparent;
  }

  &:after {
    right: 0;
    border-right: $tcon-envelope-size solid #A5ACAE;
    border-top: $tcon-envelope-size/2 solid transparent;
  }

  &.tcon-transform .tcon-mail--envelope__flap {
    transform: rotate3d(360, 0, 0, 180deg);
    transform-origin: 0 100%;
  }
}

.tcon-mail--envelope__flap {
  border-bottom: $tcon-envelope-size/4 solid transparent;
  border-left: $tcon-envelope-size/2 solid transparent;
  border-right: $tcon-envelope-size/2 solid transparent;
  border-color: transparent;
  border-bottom-color: #AEB3B5;
  position: absolute;
  transform: rotate3d(0,0,0,0deg);
  transform-origin: 0 100%;
  transition: $tcon-envelope-transition;
  top: -$tcon-envelope-size/4;
  left: 0;
}
$tcon-svgchevron-size: $tcon-size !default;
$tcon-svgchevron-color: black !default;
$tcon-svgchevron-strokew: 1px !default;
$tcon-svgchevron-timing: 3s !default;

@keyframes chevron-pulse {
  0%   { opacity: 0; }
  40%  { opacity: 1; }
  80%  { opacity: 0; }
  100% { opacity: 0; }
}

.tcon-svgchevron {
  height: $tcon-svgchevron-size;
  width: $tcon-svgchevron-size;
}

.tcon-svgchevron path {
  animation: chevron-pulse $tcon-svgchevron-timing infinite cubic-bezier(0.4, 0, 0.2, 1);
  fill: transparent;
  stroke: $tcon-svgchevron-color;
  stroke-width: $tcon-svgchevron-strokew;
}

@for $i from 1 through 3 {
  .tcon-svgchevron path.a#{$i} {
    animation-delay: -($i - ($i/2)) + 0.5s;
  }
}

$tcon-search-size: ($tcon-size * 0.75) !default;
$tcon-search-radius: ($tcon-size / 14) !default;
$tcon-search-color: black !default;
$tcon-search-glass-color: white !default;
$tcon-search-handle-width: ($tcon-size / 10) !default;
$tcon-search-glass-radius: ($tcon-size / 3.3333) !default;
$tcon-search-glass-border-width: ($tcon-size / 20) !default;
@mixin search-item {
  display: inline-block;
  height: $tcon-search-size;
  width: $tcon-search-size;
  border-radius: 0;
  transition: $tcon-transition;
  background: transparent;
}

.tcon-search__item {
  @include search-item;
  position: relative;
  transform: rotate(-45deg);

  &::before,
  &::after {
    @include search-item;
    content: '';
    position: absolute;
    width: 100%;
    top: 0;
    bottom: 0;
    margin: auto;
  }

  &::before {
    height: $tcon-search-handle-width;
    left: 0;
    background: $tcon-search-color;
    border-radius: $tcon-search-radius;
  }

  &::after {
    right: 0;
    background: $tcon-search-glass-color;
    border-radius: 50%;
    width: $tcon-search-glass-radius;
    height: $tcon-search-glass-radius;
    border: $tcon-search-glass-border-width solid black;
    transform-origin: 50% 50%;
  }
}
.tcon-search--xcross {
  &.#{$tcon-jstransform} {
    transform: scale3d(.8, .8, .8);
    
    .tcon-search__item {
      &::before, &::after {
        border-radius: $tcon-search-radius;
        background: $tcon-search-color;
      }

      &::after {
        height: $tcon-search-handle-width;
        width: 100%;
        top: 0;
        right: 0;
        border: 0;
        transform: rotate3d(0, 0, 1, 90deg);
      }
    }
  }
}
$spinner_speed: .675s !default;
$spinner_radius: 80% !default;
$spinner_fill_radius: 90px !default;

$spinner_size: 40px !default;
$spinner_thickness: 10px !default;
$spinner_inner_circle: $spinner_size - $spinner_thickness !default;

$spinner_color: black !default;
$spinner_bg: lightgray !default;
$spinner_inner_bg: white !default;
.tcon-loader--spinner360 {
  border-radius: 80%;
  display: block;
  height: $spinner_size;
  width: $spinner_size;
  position: relative;
  animation: tcon-spin360 $spinner_speed linear infinite forwards;
  background: $spinner_bg;

  &:before,
  &:after {
    content: "";
    display: block;
    position: absolute;
  }

  &:before {
    border-radius: 0 $spinner_fill_radius $spinner_fill_radius 0;
    height: $spinner_size;
    width: 50%;
    top: 0; right: 0;
    z-index: 1;
    background: $spinner_color;
    background-image: linear-gradient($spinner_bg, $spinner_color);
  }

  &:after {
    border-radius: $spinner_radius;
    height: $spinner_inner_circle;
    width: $spinner_inner_circle;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    background: $spinner_inner_bg;
  }
}

@keyframes tcon-spin360 {
  to {
    transform: rotate(360deg);
  }
}